step(discretization).
step(normalization).
step(features).
step(imputation).
step(rebalancing).

step(classification).


operator(discretization, kbins).
operator(discretization, binarizer).
operator(normalization, power_transformer).
operator(normalization, robust_scaler).
operator(normalization, standard).
operator(normalization, minmax).
operator(features, select_k_best).
operator(features, pca).
operator(imputation, simple_imputer).
operator(imputation, iterative_imputer).
operator(rebalancing, near_miss).
operator(rebalancing, smote).

operator(classification, dt).
operator(classification, knn).
operator(classification, naive_bayes).
operator(classification, nn).
operator(classification, rf).
operator(classification, ada_boost).


hyperparameter(kbins, n_bins, randint).
hyperparameter(kbins, encode, choice).
hyperparameter(kbins, strategy, choice).
hyperparameter(binarizer, threshold, choice).
hyperparameter(robust_scaler, with_centering, choice).
hyperparameter(robust_scaler, with_scaling, choice).
hyperparameter(standard, with_mean, choice).
hyperparameter(standard, with_std, choice).
hyperparameter(select_k_best, k, randint).
hyperparameter(pca, n_components, randint).
hyperparameter(simple_imputer, strategy, choice).
hyperparameter(iterative_imputer, initial_strategy, choice).
hyperparameter(iterative_imputer, imputation_order, choice).
hyperparameter(near_miss, n_neighbors, randint).
hyperparameter(smote, k_neighbors, randint).

hyperparameter(dt, max_depth, randint).
hyperparameter(dt, min_samples_split, randint).
hyperparameter(dt, min_samples_leaf, randint).
hyperparameter(dt, max_features, randint).
hyperparameter(dt, max_leaf_nodes, randint).
hyperparameter(dt, splitter, choice).
hyperparameter(dt, criterion, choice).
hyperparameter(knn, n_neighbors, randint).
hyperparameter(knn, weights, choice).
hyperparameter(knn, metric, choice).
hyperparameter(nn, n_hidden_layers, choice).
hyperparameter(nn, n_neurons, choice).
hyperparameter(nn, activation, choice).
hyperparameter(nn, solver, choice).
hyperparameter(nn, alpha, choice).
hyperparameter(nn, learning_rate, choice).
hyperparameter(rf, n_estimators, choice).
hyperparameter(rf, max_depth, randint).
hyperparameter(rf, max_features, randint).
hyperparameter(rf, min_samples_split, randint).
hyperparameter(rf, max_leaf_nodes, randint).
hyperparameter(rf, bootstrap, choice).
hyperparameter(rf, criterion, choice).
hyperparameter(ada_boost, n_estimators, choice).
hyperparameter(ada_boost, learning_rate, choice).

domain(kbins, n_bins, [3, 8]).
domain(kbins, encode, ["ordinal"]).
domain(kbins, strategy, ["uniform", "quantile", "kmeans"]).
domain(binarizer, threshold, [0.0, 0.5, 2.0, 5.0]).
domain(robust_scaler, with_centering, [true, false]).
domain(robust_scaler, with_scaling, [true, false]).
domain(standard, with_mean, [true, false]).
domain(standard, with_std, [true, false]).
domain(select_k_best, k, [1, 10]).
domain(pca, n_components, [1, 8]).
domain(simple_imputer, strategy, ["most_frequent", "constant"]).
domain(iterative_imputer, initial_strategy, ["most_frequent", "constant"]).
domain(iterative_imputer, imputation_order, ["ascending", "descending", "roman", "arabic", "random"]).
domain(near_miss, n_neighbors,  [1, 4]).
domain(smote, k_neighbors,  [5, 8]).

domain(dt, max_depth, [1, 5]).
domain(dt, min_samples_split, [2, 6]).
domain(dt, min_samples_leaf, [1, 6]).
domain(dt, max_features, [1, 4]).
domain(dt, max_leaf_nodes, [2, 6]).
domain(dt, splitter, ["best", "random"]).
domain(dt, criterion, ["gini", "entropy"]).
domain(knn, n_neighbors, [3, 20]).
domain(knn, weights, ["uniform", "distance"]).
domain(knn, metric, ["minkowski", "euclidean", "manhattan"]).
domain(nn, n_hidden_layers, [1, 5, 10, 25]).
domain(nn, n_neurons, [5, 10, 25, 50, 100]).
domain(nn, activation, ["logistic", "tanh", "relu"]).
domain(nn, solver, ["lbfgs", "sgd", "adam"]).
domain(nn, alpha, [0.0001, 0.001, 0.01, 0.00001]).
domain(nn, learning_rate, ["constant", "invscaling", "adaptive"]).
domain(rf, n_estimators, [10, 25, 50, 75, 100]).
domain(rf, max_depth, [1, 5]).
domain(rf, max_features, [1, 4]).
domain(rf, min_samples_split, [2, 6]).
domain(rf, max_leaf_nodes, [2, 6]).
domain(rf, bootstrap, [true, false]).
domain(rf, criterion, ["gini", "entropy"]).
domain(ada_boost, n_estimators, [10, 50, 100, 500]).
domain(ada_boost, learning_rate, [0.0001, 0.001, 0.01, 0.1, 1.0]).